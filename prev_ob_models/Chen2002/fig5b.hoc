load_file("init.hoc")
load_file(1, "fig5b.ses")

hoc_ac_ = .5
tuftden[1] PointProcessManager[1].move()
hoc_ac_ = .5
tuftden[0] PointProcessManager[2].move()

for i=0,1 GluSyn[i].onset=40
for i=0,1 {GluSyn[i].gmaxampa = 0.01 GluSyn[i].gmaxnmda = 0.005}
for i=0,1 {InhiSyn[i].gmaxampa = 0 InhiSyn[i].gmaxnmda = 0.12}
tstop=41

objref stopvec
stopvec=new Vector()
stopvec.append(41.5, 42, 42.3, 42.5, 42.9, 43.1, 43.3, 43.4, 43.5, 43.6,\
                 43.9, 44.2, 44.4, 44.7)

proc fig5binit() {local i
	for i=1,2 { Graph[i].erase() }
	stdrun_quiet=1
	stdinit()
	continuerun(41)
	stdrun_quiet=0
	stopindex = 0	
}

func fig5step() {
	if (stopindex < stopvec.size) {
		continuerun(stopvec.x[stopindex])
		stopindex += 1
		return 1
	}
	return 0
}

fig5binit()
while(fig5step()) {
	Graph[0].mark(t, priden.v(.75), "O", 6, 3, 1)
	for i=1,2 Graph[i].exec_menu("Keep Lines")
	for i=1,2 Graph[i].exec_menu("Keep Lines")
}

/* inside fig5b.ses
xpanel("Start over")
xbutton("Re-initialize", "fig5binit()")
xbutton("SingleStep", "fig5step()")
xpanel()
*/
